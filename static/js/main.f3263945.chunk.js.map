{"version":3,"sources":["components/Form.js","utils/utils.js","components/SingleColor.js","components/ColorList.js","App.js","index.js"],"names":["Form","onSubmit","value","onChange","className","type","placeholder","rgbToHex","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","style","backgroundColor","onClick","navigator","clipboard","writeText","ColorList","props","list","map","color","hex","App","setColor","error","setError","Values","all","setList","e","preventDefault","colors","console","log","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAmBeA,EAnBF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACzC,OACE,0BAASA,UAAU,YAAnB,UACE,iDACA,uBAAMH,SAAUA,EAAhB,UACE,uBACEI,KAAK,OACLH,MAAOA,EACPC,SAAUA,EACVG,YAAY,UACZF,UAAWA,IACb,wBAAQA,UAAU,MAAMC,KAAK,SAA7B,2B,OCFOE,ICqBAC,EA3BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzC,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAMP,EAAIQ,KAAK,KACfC,EAAQ,WAAON,GAQrB,OAPAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAGF,0BACEV,UAAS,gBAAWO,EAAQ,IAAM,eAClCY,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAT,MACxBS,QAAS,WACPV,GAAS,GACTW,UAAUC,UAAUC,UAAUV,IALlC,UAOE,oBAAGd,UAAU,gBAAb,UAA8BM,EAA9B,OAEA,mBAAGN,UAAU,cAAb,SAA4Bc,IAC3BJ,GAAS,mBAAGV,UAAU,QAAb,qCCNDyB,EAjBG,SAAAC,GAChB,OACE,yBAAS1B,UAAU,SAAnB,SACG0B,EAAMC,KAAKC,KAAI,SAACC,EAAOtB,GACtB,OACE,cAAC,EAAD,2BAEMsB,GAFN,IAGEtB,MAAOA,EACPC,SAAUqB,EAAMC,MAHXvB,SCiCFwB,EApCH,WACV,MAA0BtB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcG,EAAd,KACA,EAA0BvB,oBAAS,GAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACA,EAAwBzB,mBAAS,IAAI0B,IAAO,WAAWC,IAAI,KAA3D,mBAAOT,EAAP,KAAaU,EAAb,KAoBA,OACE,qCACE,cAAC,EAAD,CACExC,SArBgB,SAAAyC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIL,IAAON,GAAOO,IAAI,IACnCC,EAAQG,GACRN,GAAS,GACTF,EAAS,IACT,MAAOC,GACPC,GAAS,GACTF,EAAS,IACTS,QAAQC,IAAIT,KAYVnC,MAAO+B,EACP9B,SATkB,SAAAuC,GACtBN,EAASM,EAAEK,OAAO7C,QASdE,UAAS,UAAKiC,EAAQ,QAAU,QAElC,cAAC,EAAD,CAAMN,KAAMA,QC/BlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f3263945.chunk.js","sourcesContent":["const Form = ({ onSubmit, value, onChange, className }) => {\n  return (\n    <section className='container'>\n      <h3>color generator</h3>\n      <form onSubmit={onSubmit}>\n        <input\n          type='text'\n          value={value}\n          onChange={onChange}\n          placeholder='#fcf003'\n          className={className}></input>\n        <button className='btn' type='submit'>\n          submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default Form;\n","function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import { useState, useEffect } from 'react';\nimport rgbToHex from '../utils/utils';\n\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\n  const [alert, setAlert] = useState(false);\n  const bcg = rgb.join(',');\n  const hexValue = `#${hexColor}`;\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false);\n    }, 1000);\n    return () => clearTimeout(timeout);\n  }, [alert]);\n\n  return (\n    <article\n      className={`color ${index > 10 && 'color-light'}`}\n      style={{ backgroundColor: `rgb(${bcg})` }}\n      onClick={() => {\n        setAlert(true);\n        navigator.clipboard.writeText(hexValue);\n      }}>\n      <p className='percent-value'>{weight}%</p>\n      {/* <p className='color-value'>{rgbToHex(...rgb)}</p> */}\n      <p className='color-value'>{hexValue}</p>\n      {alert && <p className='alert'>copied to clipboard</p>}\n    </article>\n  );\n};\n\nexport default SingleColor;\n","import SingleColor from './SingleColor';\n\nconst ColorList = props => {\n  return (\n    <section className='colors'>\n      {props.list.map((color, index) => {\n        return (\n          <SingleColor\n            key={index}\n            {...color}\n            index={index}\n            hexColor={color.hex}\n          />\n        );\n      })}\n    </section>\n  );\n};\n\nexport default ColorList;\n","import { useState } from 'react';\nimport Values from 'values.js';\nimport Form from './components/Form';\nimport List from './components/ColorList';\n\nconst App = () => {\n  const [color, setColor] = useState('');\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values('#fcf003').all(10));\n\n  const submitHandler = e => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10);\n      setList(colors);\n      setError(false);\n      setColor('');\n    } catch (error) {\n      setError(true);\n      setColor('');\n      console.log(error);\n    }\n  };\n\n  const onChangeHandler = e => {\n    setColor(e.target.value);\n  };\n\n  return (\n    <>\n      <Form\n        onSubmit={submitHandler}\n        value={color}\n        onChange={onChangeHandler}\n        className={`${error ? 'error' : null}`}\n      />\n      <List list={list} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}